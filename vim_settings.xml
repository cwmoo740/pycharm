<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/src/python/cowlock/server.py" timestamp="1497585547676">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="^" line="15" column="14" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="/Python Console" timestamp="1498532596835">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/python/cowlock/domain/user.py" timestamp="1497585651804">
        <mark key="[" line="0" column="10" />
        <mark key="]" line="0" column="10" />
        <mark key="." line="0" column="10" />
      </file>
      <file name="/fragment.py" timestamp="1498532054795">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1497490050376">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/python/ai/hw3/probability_tests.py" timestamp="1498100828414">
        <mark key="[" line="80" column="0" />
        <mark key="]" line="80" column="0" />
        <mark key="." line="80" column="0" />
      </file>
      <file name="$USER_HOME$/src/python/ai_midterm/alphabeta.py" timestamp="1498525275447">
        <mark key="[" line="99" column="84" />
        <mark key="]" line="99" column="10" />
        <mark key="^" line="99" column="10" />
        <mark key="." line="99" column="10" />
      </file>
      <file name="$USER_HOME$/src/python/cowlock/main.py" timestamp="1497489514528">
        <mark key="[" line="5" column="4" />
        <mark key="]" line="4" column="10" />
        <mark key="^" line="4" column="10" />
        <mark key="." line="4" column="10" />
      </file>
      <file name="$USER_HOME$/src/python/ai_midterm/scratch.txt" timestamp="1498534233372">
        <mark key="[" line="1" column="11" />
        <mark key="]" line="0" column="11" />
        <mark key="." line="0" column="11" />
        <mark key="^" line="0" column="11" />
      </file>
      <file name="$USER_HOME$/src/python/ai_midterm/scratch.py" timestamp="1498537334371">
        <mark key="[" line="7" column="17" />
        <mark key="]" line="7" column="17" />
        <mark key="." line="7" column="17" />
        <mark key="^" line="7" column="14" />
      </file>
      <file name="$USER_HOME$/src/python/ai_midterm/graph_search.py" timestamp="1498533534248">
        <mark key="[" line="102" column="102" />
        <mark key="]" line="99" column="0" />
        <mark key="." line="99" column="0" />
      </file>
      <file name="$USER_HOME$/src/python/cowlock/schema.sql" timestamp="1497584363232">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/src/python/ai/hw3/probability_solution.py" timestamp="1498101216327">
        <mark key="[" line="150" column="30" />
        <mark key="]" line="150" column="37" />
        <mark key="." line="150" column="37" />
        <mark key="^" line="150" column="37" />
      </file>
      <file name="$USER_HOME$/src/python/cowlock/dao.py" timestamp="1497583294901">
        <mark key="[" line="7" column="22" />
        <mark key="]" line="10" column="36" />
        <mark key="^" line="10" column="36" />
        <mark key="." line="10" column="36" />
      </file>
    </filemarks>
    <jumps />
    <registers>
      <register name="1" type="2">
        <text encoding="base64">ICAgIGVsc2U6Cg==</text>
      </register>
      <register name="&quot;" type="4">
        <text>150</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgIGlmIGVfcHJpbWUgPCBlOgogICAgICAgIHJldHVybiAxLgo=</text>
      </register>
      <register name="3" type="4">
        <text>from typing import Dict


def find_min(d: Dict[str, float]):
    return sorted(d.items(), key=lambda x: x[1])[0]


explored = {'S', 'Z', 'A', 'E', 'G'}
frontier = {'G': 600 + 1180, 'B': 550 + 1250}

second_frontier = {'G': 300 + 450 + 350 + 450, 'P': 900 + 1570, 'C': 300 + 350 + 1430}
print(find_min(frontier))
print(find_min(second_frontier))</text>
      </register>
      <register name="4" type="4">
        <text>Frontier = {Z: 600+350+980, C: 600+350+450+350, C: 550+1000+500, P: 550+1000+450}
Explored = {S, B, G, E, A, J, Z}</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">RW5xdWV1ZShFKQo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">CmRlZiB1bmlmb3JtX2Nvc3Rfc2VhcmNoKGdyYXBoOiBHcmFwaCwgcm9vdDogTm9kZSwgZ29hbDogTm9kZSkgLT4gSXRlcmFibGVbTm9kZV06CiAgICBzID0gc2V0KCkKICAgIHEgPSBkZXF1ZSgpCiAgICBzLmFkZChyb290LmtleSkKICAgIGluc29ydChxLCByb290KQogICAgd2hpbGUgcToKICAgICAgICBjdXJyZW50ID0gcS5wb3BsZWZ0KCkKICAgICAgICBmb3Igbm9kZSBpbiBncmFwaC5nZXRfbmVpZ2hib3JzKGN1cnJlbnQpOgogICAgICAgICAgICBpZiBub2RlLmtleSBub3QgaW4gczoKICAgICAgICAgICAgICAgIHMuYWRkKG5vZGUua2V5KQogICAgICAgICAgICAgICAgbm9kZS5hZGRfcGFyZW50KGdyYXBoLmdldF9ub2RlKGN1cnJlbnQpKQogICAgICAgICAgICAgICAgcS5hcHBlbmQobm9kZS5rZXkpCiAgICAgICAgICAgIGlmIG5vZGUua2V5ID09IGdvYWwua2V5OgogICAgICAgICAgICAgICAgcGF0aCA9IFtdCiAgICAgICAgICAgICAgICBub2RlID0gZ29hbAogICAgICAgICAgICAgICAgd2hpbGUgbm9kZS5rZXkgIT0gcm9vdC5rZXk6CiAgICAgICAgICAgICAgICAgICAgcGF0aC5hcHBlbmQobm9kZSkKICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnQKCiAgICAgICAgICAgICAgICByZXR1cm4gcGF0aA==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="-" type="4">
        <text>150</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>